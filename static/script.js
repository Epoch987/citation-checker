document.addEventListener('DOMContentLoaded', () => {
    let currentDatabase = 'scopus';
    let currentAuthor = null;
    let currentAuthorCandidates = [];
    let authorWorksCache = [];

    const resultsContainer = document.getElementById('results-container');
    const dbSwitchRadios = document.querySelectorAll('input[name="database"]');
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabPanes = document.querySelectorAll('.tab-pane');
    const authorStage1 = document.getElementById('author-stage-1');
    const authorStage2 = document.getElementById('author-stage-2');
    const authorStage3 = document.getElementById('author-stage-3');
    const findAuthorByNameBtn = document.getElementById('find-author-by-name-btn');
    const findAuthorByOrcidBtn = document.getElementById('find-author-by-orcid-btn');
    const authorCandidatesContainer = document.getElementById('author-candidates-container');
    const backToAuthorSearchBtn = document.getElementById('back-to-author-search');
    const backToAuthorSearchFromCandidatesBtn = document.getElementById('back-to-author-search-from-candidates');
    const authorWorksContainer = document.getElementById('author-works-container');
    const searchJournalCitationsBtn = document.getElementById('search-journal-citations-btn');
    const fillCoreJournalsBtn = document.getElementById('fill-core-journals');
    const citedByStage1 = document.getElementById('cited-by-stage-1');
    const citedByStage2 = document.getElementById('cited-by-stage-2');
    const findArticleBtn = document.getElementById('find-article-btn');
    const citedByArticleCandidatesContainer = document.querySelector('#cited-by-pane #cited-by-article-candidates-container');
    const backToArticleSearchBtn = document.querySelector('#cited-by-pane #back-to-article-search');
    const modal = document.getElementById('article-modal');
    const modalBody = document.getElementById('modal-body-content');
    const modalCloseBtn = document.querySelector('.modal-close-btn');

    const JOURNAL_CATEGORIES = {"CSSCI 来源期刊 (C刊)":{"defaultVisible":false,"subcategories":{"语言学类":[{"name":"当代语言学","scopusTitle":null},{"name":"外语教学与研究","scopusTitle":"Foreign Language Teaching and Research"},{"name":"现代外语","scopusTitle":"Modern Foreign Languages"},{"name":"外国语","scopusTitle":"Journal of Foreign Languages"},{"name":"世界汉语教学","scopusTitle":"Chinese Teaching in the World"},{"name":"语言科学","scopusTitle":"Linguistic Sciences"},{"name":"外语界","scopusTitle":"Foreign Language World"},{"name":"中国外语","scopusTitle":"Foreign Languages in China"},{"name":"外语教学","scopusTitle":"Foreign Language Education"},{"name":"语言教学与研究","scopusTitle":"Language Teaching and Linguistic Studies"},{"name":"外语与外语教学","scopusTitle":"Foreign Languages and Their Teaching"},{"name":"当代修辞学","scopusTitle":"Contemporary Rhetoric"},{"name":"外语电化教学","scopusTitle":"Technology Enhanced Foreign Language Education"},{"name":"外语教学理论与实践","scopusTitle":"Foreign Language Learning Theory and Practice"},{"name":"中国翻译","scopusTitle":"Chinese Translators Journal"},{"name":"上海翻译","scopusTitle":null},{"name":"民族语文","scopusTitle":"Minority Languages of China"},{"name":"方言","scopusTitle":null},{"name":"汉语学习","scopusTitle":"Chinese Language Learning"},{"name":"语文研究","scopusTitle":null},{"name":"汉语学报","scopusTitle":"Chinese Linguistics"},{"name":"语言战略研究","scopusTitle":"Journal of Language Policy and Language Planning"},{"name":"外语教育研究前沿","scopusTitle":"Frontiers of Foreign Language Education Research"}],"外国文学类":[{"name":"外国文学评论","scopusTitle":"Foreign Literature Review"},{"name":"外国文学研究","scopusTitle":"Foreign Literature Studies"},{"name":"外国文学","scopusTitle":"Foreign Literatures"},{"name":"当代外国文学","scopusTitle":"Contemporary Foreign Literature"},{"name":"俄罗斯文艺","scopusTitle":"Russian Literature and Arts"}]}},"CSSCI 扩展版来源期刊":{"defaultVisible":false,"subcategories":{"综合":[{"name":"外语学刊","scopusTitle":"Foreign Languages Research"},{"name":"解放军外国语学院学报","scopusTitle":"Journal of PLA University of Foreign Languages"},{"name":"外语研究","scopusTitle":"Foreign Language Research"},{"name":"当代外语研究","scopusTitle":"Contemporary Foreign Language Studies"},{"name":"西安外国语大学学报","scopusTitle":"Journal of Xi'an International Studies University"},{"name":"中国俄语教学","scopusTitle":null},{"name":"日语学习与研究","scopusTitle":"Japanese Language Learning and Research"},{"name":"语言与翻译","scopusTitle":"Language and Translation"},{"name":"华文教学与研究","scopusTitle":"TCSL Studies"},{"name":"古汉语研究","scopusTitle":"Research in Ancient Chinese Language"}]}},"北大核心期刊":{"defaultVisible":false,"subcategories":{"语言学与教学类":[{"name":"山东外语教学","scopusTitle":"Shandong Foreign Language Teaching"},{"name":"外国语文","scopusTitle":"Foreign Language and Literature"},{"name":"北京第二外国语学院学报","scopusTitle":"Journal of Beijing International Studies University"}],"文学与翻译类":[{"name":"译林","scopusTitle":"Yilin"},{"name":"名作欣赏","scopusTitle":null},{"name":"中国比较文学","scopusTitle":"Comparative Literature in China"}]}}};

    async function fetchAPI(endpoint, body) {
        showLoading();
        try {
            const augmentedBody = { ...body, database: currentDatabase };
            const response = await fetch(`/api${endpoint}`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(augmentedBody) });
            const data = await response.json();
            if (!response.ok || !data.success) { throw new Error(data.error || `HTTP error! status: ${response.status}`); }
            resultsContainer.innerHTML = '';
            return data;
        } catch (error) { console.error('API Fetch Error:', error); showError(error.message); return null; }
    }

    function handleDatabaseChange() {
        currentDatabase = document.querySelector('input[name="database"]:checked').value;
        const nameSearchSection = document.getElementById('author-search-by-name-section');
        const orcidSearchSection = document.getElementById('author-search-by-orcid-section');
        if (currentDatabase === 'scopus') {
            nameSearchSection.classList.add('disabled-feature');
            orcidSearchSection.classList.add('disabled-feature');
        } else {
            nameSearchSection.classList.remove('disabled-feature');
            orcidSearchSection.classList.remove('disabled-feature');
        }
        resetAllPanes();
    }

    dbSwitchRadios.forEach(radio => radio.addEventListener('change', handleDatabaseChange));
    tabButtons.forEach(button => { button.addEventListener('click', () => { tabButtons.forEach(btn => btn.classList.remove('active')); tabPanes.forEach(pane => pane.classList.remove('active')); button.classList.add('active'); document.getElementById(button.dataset.target).classList.add('active'); resetAllPanes(); }); });
    findAuthorByNameBtn.addEventListener('click', async () => { const name = document.getElementById('author-search-query').value.trim(); if (!name) { showError("请输入作者姓名。"); return; } const data = await fetchAPI('/search-author-by-name', { name }); if (data && data.authors) { currentAuthorCandidates = data.authors; renderAuthorCandidates(data.authors); authorStage1.style.display = 'none'; authorStage2.style.display = 'block'; } });
    findAuthorByOrcidBtn.addEventListener('click', async () => { const orcid = document.getElementById('author-orcid').value.trim(); if (!orcid) { showError("请输入ORCID。"); return; } const data = await fetchAPI('/get-author-by-orcid', { orcid }); if (data && data.author) { selectAuthor(data.author); } });
    backToAuthorSearchBtn.addEventListener('click', resetAuthorSearch);
    backToAuthorSearchFromCandidatesBtn.addEventListener('click', resetAuthorSearch);
    searchJournalCitationsBtn.addEventListener('click', async () => { const sourceJournals = document.getElementById('source-journals').value.trim(); const targetJournal = document.getElementById('journal-target-journal').value.trim(); if (!sourceJournals || !targetJournal) { showError("源期刊和目标期刊均为必填项。"); return; } const startYear = document.getElementById('journal-start-year').value; const endYear = document.getElementById('journal-end-year').value; const data = await fetchAPI('/search-journal-citations', { source_journals: sourceJournals, target_journal: targetJournal, start_year: startYear, end_year: endYear }); if (data) renderSimpleResults(data, `在 ${startYear}-${endYear} 年间，源期刊共引用了 <strong>${targetJournal}</strong> ${data.count} 次。`, 'journal-citation'); });
    findArticleBtn.addEventListener('click', async () => { const identifier = document.getElementById('article-identifier').value.trim(); if (!identifier) { showError("请输入文章标题或DOI。"); return; } const data = await fetchAPI('/find-article', { identifier }); if (data && data.articles) { authorWorksCache = data.articles; renderArticleCandidatesInPane(authorWorksCache); citedByStage1.style.display = 'none'; citedByStage2.style.display = 'block'; } });
    if(backToArticleSearchBtn) backToArticleSearchBtn.addEventListener('click', resetArticleSearch);
    modalCloseBtn.addEventListener('click', () => modal.style.display = 'none');
    modal.addEventListener('click', (e) => { if (e.target === modal) { modal.style.display = 'none'; } });

    function resetAuthorSearch() { currentAuthor = null; currentAuthorCandidates = []; authorWorksCache = []; authorStage1.style.display = 'block'; authorStage2.style.display = 'none'; authorStage3.style.display = 'none'; document.getElementById('author-search-query').value = ''; document.getElementById('author-orcid').value = ''; authorWorksContainer.innerHTML = ''; resultsContainer.innerHTML = ''; }
    function resetArticleSearch() { authorWorksCache = []; citedByStage1.style.display = 'block'; citedByStage2.style.display = 'none'; if (citedByArticleCandidatesContainer) citedByArticleCandidatesContainer.innerHTML = ''; document.getElementById('article-identifier').value = ''; resultsContainer.innerHTML = ''; }
    function resetAllPanes() { resultsContainer.innerHTML = ''; resetAuthorSearch(); resetArticleSearch(); document.getElementById('source-journals').value = ''; document.getElementById('journal-target-journal').value = ''; }

    function renderAuthorCandidates(authors) {
        if (!authors.length) { authorCandidatesContainer.innerHTML = `<div class="info-message">未找到匹配的作者。</div>`; return; }
        authorCandidatesContainer.innerHTML = authors.map((author, index) => {
            const orcidHtml = author.orcid ? `<a href="https://orcid.org/${author.orcid}" target="_blank" rel="noopener noreferrer">${author.orcid}</a>` : 'N/A';
            const countryHtml = author.country_code && author.country_code !== 'N/A' ? `<span class="info-tag country">国家: ${author.country_code}</span>` : '';
            const yearRangeHtml = author.works_year_range && author.works_year_range !== 'N/A' ? `<span class="info-tag year-range">学术生涯: ${author.works_year_range}</span>` : '';
            const cited2yrHtml = author.cited_by_count_2yr !== null ? `<span class="info-tag cited-2yr">近2年被引: ${author.cited_by_count_2yr}</span>` : '';
            return `<div class="author-card-selectable" data-index="${index}"> <div class="author-info"> <strong>${author.name || 'N/A'}</strong> <div class="meta institution">${author.affiliation || '最新机构: N/A'}</div> <div class="meta additional-info"> <span class="info-tag orcid">ORCID: ${orcidHtml}</span> ${countryHtml} <span class="info-tag concepts">领域: ${author.x_concepts || 'N/A'}</span> </div> <div class="meta additional-info stats"> <span class="info-tag works">作品: ${author.works_count ?? 'N/A'}</span> ${yearRangeHtml} <span class="info-tag h-index">H指数: ${author.h_index ?? 'N/A'}</span> <span class="info-tag i10-index">i10指数: ${author.i10_index ?? 'N/A'}</span> ${cited2yrHtml} </div> </div> <div class="citation-count"> <span>总被引</span> <strong>${author.cited_by_count || 0}</strong> </div> </div>`;
        }).join('');
        authorCandidatesContainer.querySelectorAll('.author-card-selectable').forEach(card => { card.addEventListener('click', (e) => { if (e.target.tagName === 'A') return; const selectedIndex = e.currentTarget.dataset.index; selectAuthor(currentAuthorCandidates[selectedIndex]); }); });
    }
    
    async function selectAuthor(author) { currentAuthor = author; authorStage1.style.display = 'none'; authorStage2.style.display = 'none'; authorStage3.style.display = 'block'; document.getElementById('selected-author-info-card').innerHTML = createAuthorInfoCard(author); authorWorksContainer.innerHTML = `<div class="loading-spinner" style="padding: 2rem 0;"></div>`; const worksData = await fetchAPI('/get-author-works', { author_id: author.author_id }); if (worksData && worksData.articles) { authorWorksCache = worksData.articles; renderAuthorWorks(authorWorksCache); } else { authorWorksContainer.innerHTML = `<div class="info-message">未能获取该作者的作品列表。</div>`; } }
    function renderAuthorWorks(articles) { let html = `<h3>代表作 (按被引数排序)</h3>`; if (articles.length === 0) { html += `<p>无作品信息。</p>`; } else { html += articles.map((article, index) => `<div class="article-card-compact" data-index="${index}"> <div class="article-info"> <strong>${article.title}</strong> <p class="meta">${article.publicationName} (${article.coverDate?.substring(0, 4) || 'N/A'})</p> </div> <div class="citation-count-compact"> <span>被引</span> <strong>${article.citedby_count}</strong> </div> </div>`).join(''); } authorWorksContainer.innerHTML = html; authorWorksContainer.querySelectorAll('.article-card-compact').forEach(card => { card.addEventListener('click', () => { const article = authorWorksCache[card.dataset.index]; showArticleModal(article); }); }); }
    function renderArticleCandidatesInPane(articles) { if (!citedByArticleCandidatesContainer) return; if (!articles.length) { citedByArticleCandidatesContainer.innerHTML = `<div class="info-message">未找到匹配的文章。</div>`; return; } citedByArticleCandidatesContainer.innerHTML = articles.map((article, index) => `<div class="article-card-selectable" data-index="${index}"> <div class="article-info"> <strong>${article.title || '无标题'}</strong> <div class="meta">${article.publicationName || 'N/A'} (${article.coverDate?.substring(0, 4) || 'N/A'})</div> </div> <div class="citation-count"> <span>总被引</span> <strong>${article.citedby_count}</strong> </div> </div>`).join(''); citedByArticleCandidatesContainer.querySelectorAll('.article-card-selectable').forEach(card => { card.addEventListener('click', () => { const selectedArticle = authorWorksCache[card.dataset.index]; showArticleModal(selectedArticle); }); }); }
    function showArticleModal(article) { modalBody.innerHTML = renderArticleDetailHTML(article); modal.style.display = 'flex'; }
    function renderArticleDetailHTML(article) { let citingUrl = '#'; if (currentDatabase === 'scopus' && article.url && article.url !== '#') { citingUrl = article.url.includes('/citedby/') ? article.url : article.url.replace('/full/','/citedby/'); } else if (currentDatabase === 'openalex' && article.id) { citingUrl = article.id.replace('openalex:', 'https://openalex.org/'); } return `<h2>文章详情</h2> <div class="detail-citation-count"> <span>总被引次数</span> <strong>${article.citedby_count}</strong> </div> <h3 class="detail-title">${article.title}</h3> <p class="meta"><strong>作者:</strong> ${article.authors}</p> <p class="meta"><strong>期刊:</strong> ${article.publicationName} (${article.coverDate?.substring(0, 4) || 'N/A'})</p> <p class="meta"><strong>DOI:</strong> ${article.doi ? `<a href="https://doi.org/${article.doi}" target="_blank">${article.doi}</a>` : 'N/A'}</p> <div class="abstract-box"> <h4>摘要</h4> <p>${article.abstract || '摘要不可用。'}</p> </div> <a href="${citingUrl}" target="_blank" rel="noopener noreferrer" class="btn-primary" style="margin-top: 1.5rem;">在 ${currentDatabase === 'scopus' ? 'Scopus' : 'OpenAlex'} 查看详情/施引文献</a>`; }
    function renderSimpleResults(data, summaryText, searchType) { let backButtonHTML = `<button class="btn-secondary btn-back-to-form" data-search-type="${searchType}">返回重新检索</button>`; let html = `<div class="result-summary"><p>${summaryText}</p></div>`; if (data.count > 0 && data.articles) { html += data.articles.map(article => createArticleCard(article)).join(''); } else if (data.count === 0) { html += `<div class="info-message">没有找到符合条件的引用。</div>`; } resultsContainer.innerHTML = backButtonHTML + html; resultsContainer.style.opacity = 1; resultsContainer.querySelector('.btn-back-to-form').addEventListener('click', (e) => { const type = e.target.dataset.searchType; if (type === 'journal-citation') { document.getElementById('source-journals').value = ''; document.getElementById('journal-target-journal').value = ''; resultsContainer.innerHTML = ''; } else if (type === 'article-citation') { resetArticleSearch(); } }); }
    function createAuthorInfoCard(author) { return `<div class="result-summary"> <p>已选定作者：<strong>${author.name}</strong></p> <p class="meta">最新机构: ${author.affiliation || 'N/A'} | <a href="${author.url}" target="_blank" rel="noopener noreferrer">查看主页</a></p> </div>`; }
    function createArticleCard(article) { const hasLink = article.url && article.url !== '#'; const linkAttrs = hasLink ? `href="${article.url}" target="_blank" rel="noopener noreferrer"` : `href="#"`; const linkClass = hasLink ? 'view-original-link' : 'view-original-link disabled'; return `<div class="article-card"> <h4>${article.title || 'N/A'}</h4> <p class="meta">${article.publicationName || 'N/A'} (${article.coverDate?.substring(0, 4) || 'N/A'})</p> <p class="meta"> <a ${linkAttrs} class="${linkClass}">查看原文</a> </p> </div>`; }
    function showLoading() { resultsContainer.innerHTML = `<div class="loading-spinner"><svg width="48" height="48" viewBox="0 0 24 24"><path fill="currentColor" d="M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z" opacity=".25"/><path fill="currentColor" d="M10.72,19.9a8,8,0,0,1-6.5-9.79A7.77,7.77,0,0,1,10.4,4.16a8,8,0,0,1,9.49,6.52A1.54,1.54,0,0,0,21.38,12h.13a1.37,1.37,0,0,0,1.38-1.54,11,11,0,1,0-12.7,12.39A1.54,1.54,0,0,0,12,21.34h0A1.47,1.47,0,0,0,10.72,19.9Z"><animateTransform attributeName="transform" type="rotate" dur="0.75s" values="0 12 12;360 12 12" repeatCount="indefinite"/></path></svg></div>`; resultsContainer.style.opacity = 1; }
    function showError(message) { resultsContainer.innerHTML = `<div class="error-message"><strong>错误:</strong> ${message}</div>`; resultsContainer.style.opacity = 1; }
    function generateQuickAddHTML(categories) { let html = ''; for (const categoryName in categories) { const category = categories[categoryName]; html += `<div class="quick-add-category"><h4>${categoryName}</h4><div class="quick-add-buttons-wrapper hidden" data-category="${categoryName}">`; for (const subcategoryName in category.subcategories) { html += `<div class="subcategory-group"><p>${subcategoryName}</p><div class="quick-add-buttons">`; category.subcategories[subcategoryName].forEach(journal => { const isDisabled = !journal.scopusTitle; const titleAttr = isDisabled ? 'title="暂未被Scopus收录"' : ''; const journalData = isDisabled ? '' : `data-journal="${journal.scopusTitle}"`; html += `<button class="btn-quick-add" ${journalData} ${isDisabled ? 'disabled' : ''} ${titleAttr}>${journal.name}</button>`; }); html += `</div></div>`; } html += `</div><button class="btn-toggle-visibility" data-target="${categoryName}">展开</button></div>`; } return html; }
    function addQuickAddEventListeners(container, inputElement, mode = 'append') { if (!container) return; container.querySelectorAll('.btn-quick-add').forEach(button => { button.addEventListener('click', () => { const journalToAdd = button.dataset.journal; if (!journalToAdd) return; if (mode === 'append') { const currentValue = inputElement.value.trim(); const currentValues = currentValue === '' ? [] : currentValue.split(',').map(s => s.trim()); if (!currentValues.includes(journalToAdd)) { currentValues.push(journalToAdd); inputElement.value = currentValues.join(', '); } } else { inputElement.value = journalToAdd; } }); }); container.querySelectorAll('.btn-toggle-visibility').forEach(button => { button.addEventListener('click', (e) => { const wrapper = e.currentTarget.previousElementSibling; const isHidden = wrapper.classList.toggle('hidden'); e.currentTarget.textContent = isHidden ? '展开' : '收起'; }); }); }
    function initializeAllQuickAdd() { const quickAddHTML = generateQuickAddHTML(JOURNAL_CATEGORIES); const sourceContainer = document.getElementById('quick-add-container-source-journals'); const targetContainer = document.getElementById('quick-add-container-target-journal'); if (sourceContainer) { sourceContainer.innerHTML = quickAddHTML; addQuickAddEventListeners(sourceContainer, document.getElementById('source-journals'), 'append'); } if (targetContainer) { targetContainer.innerHTML = quickAddHTML; addQuickAddEventListeners(targetContainer, document.getElementById('journal-target-journal'), 'set'); } if (fillCoreJournalsBtn && sourceContainer) { fillCoreJournalsBtn.addEventListener('click', () => { const cJournals = new Set(); const cCat = JOURNAL_CATEGORIES['CSSCI 来源期刊 (C刊)']; if (cCat) { for (const subcategoryName in cCat.subcategories) { cCat.subcategories[subcategoryName].forEach(journal => { if (journal.scopusTitle) { cJournals.add(journal.scopusTitle); } }); } } document.getElementById('source-journals').value = Array.from(cJournals).join(', '); }); } }
    
    initializeAllQuickAdd(); 
    handleDatabaseChange();
});
